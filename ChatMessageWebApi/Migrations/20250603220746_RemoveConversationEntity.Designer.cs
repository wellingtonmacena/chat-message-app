// <auto-generated />
using System;
using ChatMessageWebApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ChatMessageWebApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250603220746_RemoveConversationEntity")]
    partial class RemoveConversationEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ChatMessageWebApi.Models.Entities.Message", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RecipientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("SenderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("ChatMessageWebApi.Models.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfilePictureUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a13aefc-083f-4823-8bff-974fe0e8255d"),
                            CreatedAt = new DateTime(2025, 10, 5, 0, 26, 40, 0, DateTimeKind.Unspecified),
                            Email = "jole.boone@googlemail.com",
                            Name = "Jole Boone",
                            Password = "poster",
                            ProfilePictureUrl = "https://i.pravatar.cc/40?img=6",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("1791b331-ab29-46b4-9c88-e3555ae96bfd"),
                            CreatedAt = new DateTime(2025, 10, 5, 0, 26, 40, 0, DateTimeKind.Unspecified),
                            Email = "nevin.swanson@outlook.com",
                            Name = "Nevin Swanson",
                            Password = "poster",
                            ProfilePictureUrl = "https://i.pravatar.cc/40?img=8",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("d07da0e7-195a-4858-8c72-eaa77a5d9601"),
                            CreatedAt = new DateTime(2025, 10, 5, 0, 26, 40, 0, DateTimeKind.Unspecified),
                            Email = "aydin.welch@rediffmail.com",
                            Name = "Aydin Welch",
                            Password = "poster",
                            ProfilePictureUrl = "https://i.pravatar.cc/40?img=4",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("32098499-3a9e-4337-a16a-8199f53510d9"),
                            CreatedAt = new DateTime(2025, 10, 5, 0, 26, 40, 0, DateTimeKind.Unspecified),
                            Email = "erika.bolton@rediffmail.com",
                            Name = "Erika Bolton",
                            Password = "poster",
                            ProfilePictureUrl = "https://i.pravatar.cc/40?img=1",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("e828780a-778a-4c70-92f5-f3f0f40d743c"),
                            CreatedAt = new DateTime(2025, 10, 5, 0, 26, 40, 0, DateTimeKind.Unspecified),
                            Email = "well.Sanss@rediffmail.com",
                            Name = "Well Sanss",
                            Password = "poster",
                            ProfilePictureUrl = "https://i.pravatar.cc/40?img=3",
                            UpdatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
